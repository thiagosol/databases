version: '3.8'

services:
  mongo:
    image: mongo:4.4
    container_name: mongo
    restart: unless-stopped
    volumes:
      - mongo_data:/data/db
    command: mongod --wiredTigerCacheSizeGB 0.05 --quiet --nojournal --nssize 1 --smallfiles
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=shellhub
    ports:
      - "27017:27017"
    networks:
      - logging-network
      - external-sol-apis
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
        loki-external-labels: "service=mongo,type=db"
        loki-retries: "5"
        loki-batch-size: "400"
        mode: "non-blocking"
    deploy:
      resources:
        limits:
          memory: 100M

  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres.conf:/etc/postgresql/postgresql.conf
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    ports:
      - "5432:5432"
    networks:
      - logging-network
      - external-sol-apis
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
        loki-external-labels: "service=postgres,type=db"
        loki-retries: "5"
        loki-batch-size: "400"
        mode: "non-blocking"
    deploy:
      resources:
        limits:
          memory: 150M

volumes:
  mongo_data:
  pgdata:
    driver: local

networks:
  logging-network:
    external: true
  external-sol-apis:
    external: true
